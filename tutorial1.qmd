---
title: "Tutorial para classificar pinguins"
author: "Fernanda Ferreira"
lang: "pt"
date: 2024-08-23
format: html
editor: visual
---

## Objetivos desse tutorial

O objetivo desse tutorial é criar um modelo de classificação que seja capaz de prever a espécie de um pinguim a partir de seu peso, tamanho da asa, tamanho do bico e profundidade do bico. Para isso, construiremos do zero um modelo KNN.

## Lendo o conjunto

Vamos iniciar nosso trabalho lendo o pacote `palmerpengunis` e salvando o conjunto em um objeto chamado `pinguins`.

```{r}
library(palmerpenguins) #lendo o pacote
pinguins <- penguins
str(pinguins)
```

A seguir, vamos imprimir um resumo estatístico de cada uma das variáveis dos dados.

```{r}
summary(pinguins)
```

A partir do resumo das variáveis, identificamos alguns valores faltantes. Vamos removê-los.

```{r}
pinguins <- na.omit(pinguins)
summary(pinguins)
```

Pegar o conjunto, dividir em treino e teste, tirar 80%

```{r}
pinguins <- pinguins[sample(nrow(pinguins)),]

n <- round(0.8*nrow(pinguins)) #pegando 80% do número de linhas
n

treino <- pinguins[1:n,]
teste <- pinguins[-(1:n),]
```

## 

1. Criar um gráfico boxPlot eixo x especies, eixo y tamanho da asa
2. Gráfico de pontos, x = peso, y = tamanho do bico, colorir species

```{r}
library(ggplot2)

pinguins <- pinguins[sample(nrow(pinguins)),]
n <- round(0.8*nrow(pinguins))

treino <- pinguins[1:n,]
teste <-pinguins[-(1:n),]

#gráfico boxplot

ggplot(data = treino, mapping = aes(x = species, y = flipper_length_mm)) +
  geom_boxplot()

ggplot(data = treino, mapping = aes(x = body_mass_g, y = bill_length_mm, col = species))+
  geom_point()
```
-----------CLASSIFICANDO O PRIMEIRO DO TESTE-----------

Pegar o primeiro do teste e calcular a distância entre ele e todos os outros pinguins.
Um for para percorrer todos o de teste, e para cada um dos presentes em "teste" outro for

```{r}
distancias <-c() #vetor vazio para guardar as distâncias
for(k in 1:nrow(treino)){
  distancias[k] <- sqrt((teste$body_mass_g[1] - treino$body_mass_g[k])**2 + (teste$bill_length_mm[1] - treino$bill_length_mm[k])**2)
  distancias
}

distancias
treino$species[order(distancias)[1]]
teste$species[1]
```

```{r}
classificacao <- c()
for(j in 1:nrow(teste)){
  distancias <- c()
  for(k in 1:nrow(treino)){
  distancias[k] <- sqrt((teste$body_mass_g[j] - treino$body_mass_g[k])**2 + (teste$bill_length_mm[j] - treino$bill_length_mm[k])**2)  
  }
  classificacao[j] <- as.character(treino$species[order(distancias)[1]])
}
  

mean(classificacao == teste$species)

```
